#Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] 
#such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.

#Notice that the solution set must not contain duplicate triplets.

nums = [-1,0,1,2,-1,-4]

nums=list((set(nums)))
tinylist=[]
ans=[]
n=len(nums)
for i in range(0,n-1):
    for j in range(i+1,n):
        if nums[i]!=nums[j] and (-1*(nums[i]+nums[j])) in nums and nums[i]!=(-1*(nums[i]+nums[j])) and nums[j]!=(-1*(nums[i]+nums[j])) :
            tinylist.append(nums[i])
            tinylist.append(nums[j])
            tinylist.append((-1*(nums[i]+nums[j])))
            tinylist.sort()
            if tinylist not in ans:
                ans.append(tinylist)
            tinylist=[]

print(ans)
   
   
#hint : two sum + 1

nums =  [-1,0,1,2,-1,-4,0,0]
output=[[]]
ans=[]
n=len(nums)
for num in nums:
    output+=[lst+[num] for lst in output if(len(lst+[num])<3)]


        
for op in output:
    if(len(op)==2):
        a=op[0]
        b=op[1]
        nums.remove(a)
        nums.remove(b)
        x=-1*sum(op)
        if x in nums:
            op.append(x)
            op.sort()
            if op not in ans and len(op)==3:
                ans.append(op)
        nums.append(a)
        nums.append(b)
    
print(ans)
