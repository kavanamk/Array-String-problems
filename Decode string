#brute force
s = "3[a]2[bc]"
while('[' in s):
    openbrac_pos=s.rindex('[')
    ss=s[openbrac_pos:]
    closebrac_pos=len(s[:openbrac_pos])+ss.index(']')
    char=s[openbrac_pos+1:closebrac_pos]
    multiple=s[openbrac_pos-1]
    appendix=int(multiple)*char
    s=s[:openbrac_pos-1]+appendix+s[closebrac_pos+1:]
    print(s)

#using stack/recursion

from collections import deque

stri = "2[abc]3[cd]ef"
stack=deque()
for x in reversed(stri):
    stack.append(x)
    
print(stack)

def lastocc(l):
    ind=0
    for x in reversed(l):
        ind+=1
        if x=='[':
            return len(l)-ind

ans=deque()
temp=deque()
print(temp)
ss=''
s=[]
n=1
while len(stack)!=0:
    e=stack.pop()
    print(e)
    if e==']':
        openbrac_pos=lastocc(s)
        char=s[openbrac_pos+1:]
        xn=s[openbrac_pos-1]
        ss=int(xn)*char
        s=s[:openbrac_pos-1]+ss
    elif e=='[':
        s.append(e)
    elif e.isnumeric():
        s.append(e)
        n=int(e)
    else:
        s.append(e)
        
    print(s)
print(s)        

