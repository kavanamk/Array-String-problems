def distinctSet(sa):
    return len(sa)==len(set(sa))
    
def maximumSubarraySum(nums, k):
    subarr=[]
    max=0
    for i in range(0,len(nums)-k):
        for j in range(0,k):
            subarr.append(nums[i+j])
        if len(subarr)==k and distinctSet(subarr) and sum(subarr)>max:
            max=sum(subarr)
        subarr=[]
    return max
            
nums = [1,5,4,2,9,9,9]
k = 3
print(maximumSubarraySum(nums,k))

def maximumSubarraySum(nums, k):
    max_sum = float('-inf')  # Initialize to negative infinity
    for i in range(len(nums) - k + 1):  # Adjust the loop range
        subarr = nums[i:i + k]  # Extract the subarray of length k
        if len(subarr) == k and len(subarr) == len(set(subarr)):
            max_sum = max(max_sum, sum(subarr))
    return max_sum

nums = [1, 5, 4, 2, 9, 9, 9]
k = 3
print(maximumSubarraySum(nums, k))
